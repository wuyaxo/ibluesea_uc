<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ibluesea.uc.dao.UserMapper">
	<resultMap id="BaseResultMap" type="cn.ibluesea.uc.model.User">
		<id column="Id" jdbcType="VARCHAR" property="id" />
		<result column="OldId" jdbcType="VARCHAR" property="oldId" />
		<result column="UserName" jdbcType="VARCHAR" property="userName" />
		<result column="Passwd" jdbcType="VARCHAR" property="passwd" />
		<result column="Salt" jdbcType="VARCHAR" property="salt" />
		<result column="NickName" jdbcType="VARCHAR" property="nickName" />
		<result column="Email" jdbcType="VARCHAR" property="email" />
		<result column="Phone" jdbcType="VARCHAR" property="phone" />
		<result column="OrgId" jdbcType="VARCHAR" property="orgId" />
		<result column="IsActived" jdbcType="BIT" property="isActived" />
		<result column="IsLocked" jdbcType="BIT" property="isLocked" />
		<result column="IsDeleted" jdbcType="BIT" property="isDeleted" />
		<result column="LastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, OldId, UserName, Passwd, Salt, NickName, Email, Phone, OrgId, IsActived, IsLocked,
		IsDeleted, LastLoginTime
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from uc_user
		where Id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="selectByUserNameKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from uc_user
		where UserName = #{userName,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from uc_user
		where Id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="cn.ibluesea.uc.model.User">
		insert into uc_user (Id, OldId, UserName,
		Passwd, Salt, NickName,
		Email, Phone, OrgId,
		IsActived, IsLocked, IsDeleted,
		LastLoginTime)
		values (#{id,jdbcType=VARCHAR}, #{oldId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
		#{passwd,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR},
		#{isActived,jdbcType=BIT}, #{isLocked,jdbcType=BIT}, #{isDeleted,jdbcType=BIT},
		#{lastLoginTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="cn.ibluesea.uc.model.User">
		insert into uc_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="oldId != null">
				OldId,
			</if>
			<if test="userName != null">
				UserName,
			</if>
			<if test="passwd != null">
				Passwd,
			</if>
			<if test="salt != null">
				Salt,
			</if>
			<if test="nickName != null">
				NickName,
			</if>
			<if test="email != null">
				Email,
			</if>
			<if test="phone != null">
				Phone,
			</if>
			<if test="orgId != null">
				OrgId,
			</if>
			<if test="isActived != null">
				IsActived,
			</if>
			<if test="isLocked != null">
				IsLocked,
			</if>
			<if test="isDeleted != null">
				IsDeleted,
			</if>
			<if test="lastLoginTime != null">
				LastLoginTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="oldId != null">
				#{oldId,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="passwd != null">
				#{passwd,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=VARCHAR},
			</if>
			<if test="isActived != null">
				#{isActived,jdbcType=BIT},
			</if>
			<if test="isLocked != null">
				#{isLocked,jdbcType=BIT},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=BIT},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.ibluesea.uc.model.User">
		update uc_user
		<set>
			<if test="oldId != null">
				OldId = #{oldId,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				UserName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="passwd != null">
				Passwd = #{passwd,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				Salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				NickName = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				Email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				Phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="orgId != null">
				OrgId = #{orgId,jdbcType=VARCHAR},
			</if>
			<if test="isActived != null">
				IsActived = #{isActived,jdbcType=BIT},
			</if>
			<if test="isLocked != null">
				IsLocked = #{isLocked,jdbcType=BIT},
			</if>
			<if test="isDeleted != null">
				IsDeleted = #{isDeleted,jdbcType=BIT},
			</if>
			<if test="lastLoginTime != null">
				LastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where Id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.ibluesea.uc.model.User">
		update uc_user
		set OldId = #{oldId,jdbcType=VARCHAR},
		UserName = #{userName,jdbcType=VARCHAR},
		Passwd = #{passwd,jdbcType=VARCHAR},
		Salt = #{salt,jdbcType=VARCHAR},
		NickName = #{nickName,jdbcType=VARCHAR},
		Email = #{email,jdbcType=VARCHAR},
		Phone = #{phone,jdbcType=VARCHAR},
		OrgId = #{orgId,jdbcType=VARCHAR},
		IsActived = #{isActived,jdbcType=BIT},
		IsLocked = #{isLocked,jdbcType=BIT},
		IsDeleted = #{isDeleted,jdbcType=BIT},
		LastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP}
		where Id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>